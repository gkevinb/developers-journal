[
{
	"uri": "https://gaborkevinbarta.com/developers-journal/almanac/",
	"title": "Almanac",
	"tags": [],
	"description": "",
	"content": "Almanac The almanac is a collection of commonly used phrases in computer science that I have collected in order to organize them in readable and maintainable way.\n Software Principles\nInteresting\nTodo\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/styling/css/",
	"title": "CSS",
	"tags": [],
	"description": "",
	"content": "Conventions Naming Use hypen, not camelCase.\n.red-box { border: 1px solid red; } BEM (Block-Element-Modifier) Block Block of design, like a stickman\n.stick-man { } Element An element in the block, part of the block, for example the head, arms, feet of stickman. Denoted with: __ (double underscore)\n.stick-man__head { } .stick-man__arms { } .stick-man__feet { } Modifier Modifying the block or element with a specific design, like red or blue stickman. Denoted with: \u0026ndash; (double hyphen)\n.stick-man--blue { } .stick-man--red { } Or Stickman with small or big head\n.stick-man__head--small { } .stick-man__head--big { } JavaScript connection with DOM If CSS has relationship with javascript, add js-to class\nclass=\u0026quot;site-navigation js-site-navigation\u0026quot;\nSource: CSS Naming Conventions that Will Save You Hours of Debugging\n CSS Selectors Reference\n   Selector Example Description     element1 element2 div p Selects all elements inside elements         Flexbox https://philipwalton.github.io/solved-by-flexbox/\nCSS Grid Source: CSS tricks\nBasics .container{ display: grid; grid-template-columns: repeat(5, 1fr); /*Creates columns, 5 equal columns*/ /*grid-template-rows: 100px auto 200px 100px;*/ grid-template-rows: repeat(5, 1fr); /*Creates rows, 5 equal columns*/ grid-template: repeat(2, 50px) / repeat(3, 1fr); /*Shorthand Notations columns x rows*/ grid-gap: 2px; /*Gap between grids*/ } #header{ background-color: red; grid-column: 3 / 5; grid-row: 2 / 3; } #navbar{ background-color: blue; grid-column: 2 / -1; /* Starting Grid line, ending grid line, (-1 means to the end)*/ color: white; text-align: center; } #menu{ background-color: green; grid-column: 1 / 2; } #content{ background-color: orange; grid-column: 1 / 2; } .horizontal { grid-column: 1 / span 2; /*span 2 columns*/ } Template Areas .container { height: 100%; display: grid; grid-gap: 3px; grid-template-columns: repeat(12, 1fr); grid-template-rows: 40px auto 40px; grid-template-areas: \u0026#34;m h h h h h h h h . . .\u0026#34; \u0026#34;m c c c c c c c c c c c\u0026#34; \u0026#34;f f f f f f f f f f f f\u0026#34;; /* Create mini representation of layout with letters*/ } .header { grid-area: h; /* Connects this div with template layout */ } .menu { grid-area: m; } .content { grid-area: c; } .footer { grid-area: f; } Autofit Minmax .container { display: grid; grid-gap: 5px; grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); grid-template-rows: repeat(2, 100px); grid-auto-rows: 100px; /*Creates rows implicitly*/ } /* Auto-fit makes sure that the colums fit the page with minimum of 100px for each colums if not then 1 fraction / \\ */  Child div should match parent div size How to make a child DIV the same height as its parent DIV This one is strictly for designer geeks! Every time I come across this problem I have to scour the internet to find an answer. Having found it once again, I am now inserting it into my blog to ensure that I don‚Äôt lose it again!\nIf you want to make a child DIV box appear to be 100% of the height of its parent (without having to fill it with content), here is the CSS code that will achieve the desired result:\n.parent { overflow: hidden; position: relative; } .child { height: 100%; width: 100%; position: absolute; } How to make a child DIV the same height as its parent DIV | Tinstar Design Studio Blog\nKeyframes Keyframes are used to specify the behavior of the animations.\n@keyframes falling { from { background-size: 100px 100px; } to { background-size: 0px 0px; } } @keyframes winning { 0% { background-position: center 5px; } 50% { background-position: center -5px; } 100% { background-position: center 5px; } } .tile{ /* Robot winning animation */ animation-name: winning; animation-duration: 1.0s; animation-iteration-count: infinite; } Clipping Clipping tool for clipping off parts of a div.\nhttps://bennettfeely.com/clippy/\nSnippets Pure CSS Dropdown Menu Make sure Dropdown links are inside a list item as a new unordered list.\n\u0026lt;div\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Useless Link\u0026lt;/a\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Dropdown Link\u0026lt;/a\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Link 1\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Link 2\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Link 3\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; Multiple Background Images The first image will be on top while the second image will be behind it.\n#example1 { background-image: url(img_flwr.gif), url(paper.gif); background-position: right bottom, left top; background-repeat: no-repeat, repeat; } Gradient Nav-Burger Inspirationüêä\n$nav_burger_size: 100px; $nav_burger_color: linear-gradient(180deg, #d48590 0%, #ecac81 100%); .nav-burger { width: $nav_burger_size; height: $nav_burger_size * 0.6; box-sizing: content-box; /* Make sure this is default */ border-top: $nav_burger_size * 0.2 solid; border-bottom: $nav_burger_size * 0.2 solid; border-image-source: $nav_burger_color; border-image-slice: 1; .nav-burger-meat { margin-top: $nav_burger_size * 0.2; height: $nav_burger_size * 0.2; background: $nav_burger_color; } } Make sure height matches content height /* Makes sure height matches content height */ display: block; overflow: auto; CSS-Matic\nToggle Switch \u0026lt;input class=\u0026#34;toggle-switch\u0026#34; type=\u0026#34;checkbox\u0026#34;\u0026gt; $circle_radius: 22px; .toggle-switch { position: relative; -webkit-appearance: none; outline: none; top: 3px; /* Lower switch to align it with text */ margin-right: 8px; /* Put space between switch and text */ width: 42px; height: 16px; background-color: $mediumgrey; border-radius: 50px; } /* Circle part of the toggle switch */ .toggle-switch:after { content: \u0026#34;\u0026#34;; position: absolute; top: -3px; left: 0px; width: $circle_radius; height: $circle_radius; border-radius: 50%; background-color: $lightgrey; box-shadow: 0px 2px 4px rgba(0, 0,0 , 0.4); transition: 0.4s ease-in-out; -webkit-transition: 0.4s ease-in-out; } /* Color of switch when checked */ .toggle-switch:checked { background-color: $mediumgrey; } /* Position of switch when checked */ .toggle-switch:checked:after { left: 20px; background-color: $blue; } Checkbox with Fontawesome https://codingwithspike.wordpress.com/2014/11/16/fancy-css-checkboxes-with-fontawesome/\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": "Introduction Environments are not the same. For example you develop on a Macbook and server is Ubuntu server. Docker runs on containers. Docker file builds a docker image, which contains all project code,installments of needed programs, complete application wrapped in an image, which is designed to sit on top of a container.\nVideo Source\nSolid written tutorial\nTutorial Create file called Dockerfile\nTake a look at workspace/tutorial project.\n FROM will take from the Python image for DockerHub. COPY current directory RUN python specific stuff in requirements.txt CMD Commands to run, first the python command and then any python files  FROMpython:3-onbuildCOPY . /usr/src/appRUN pip install -r requirements.txtCMD [\u0026#34;python\u0026#34;, \u0026#34;api.py\u0026#34;]You can run services like:\ndocker run These usually has several arguments like port numbers, which can become tedious that is why it is better to use a docker-compose.yml file, like below. docker-compose is a yaml file and spins up all the containers we need.\nversion: \u0026#39;3\u0026#39; services: # you name the services product-service: # Directory where the dockerfile is build: ./product # sourcedirectory:/directoryonhost volumes: - ./product:/usr/src/app # localhostport:containerport ports: - 5001:80 website: # gets from dockerhub image: php:apache volumes: - ./website:/var/www/html ports: - 5000:80 depends_on: - product-service Run docker-compose file by running this command docker-compose up. You can stop the services with CTRL + C. The containers can be started up by using docker-compose up -d This will allow you to still navigate in the terminal and you can stop it by docker-compose stop.\nCommands  docker ps -a : List containers with name, ID, etc docker stop d31a3b925d89 : Stop container with ID docker system prune : Remove stopped containers and dangling images docker images : List images with repository, image ID, etc docker rmi e91727a11cd7 : Remove image with image ID docker build -t webserver-image:v1 . : Build image with name: web server-image version: v1 docker run -d -p 5000:80 webserver-image:v1 : Run image in container port 5000 locally and port 80 on container docker-compose up : Build image and run in container based on configuration in docker-compose.yaml file docker-compose up --build : To do a fresh build of images. Needed to update files. docker-compose up -d : Create containers and -d to launch in daemon mood (still navigate cmd) docker-compose stop : Stop all containers  Deploy Static website as container Medium article](https://medium.com/myriatek/using-docker-to-run-a-simple-nginx-server-75a48d74500b)\ndockerfile FROMnginx:alpineRUN mkdir /wwwCOPY dist/index.html /www/index.htmlCOPY dist/css /www/cssCOPY dist/js /www/jsCOPY dist/img /www/imgCOPY nginx.conf /etc/nginx/nginx.confThe first line defines our base image. The second line copies the content of the current directory into a particular location inside the container.\nnginx.conf events {} http { server { listen 80; root /www; index index.html; location / { include /etc/nginx/mime.types; try_files $uri $uri/ /index.html; } } } docker-compose.yaml version: \u0026#39;3.7\u0026#39; services: web-service: build: ./ ports: - 5000:80 volumes: [\u0026#39;./server/src:/app\u0026#39;] # To auto-reload new code from server/src to Docker app "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/styling/scss/",
	"title": "SCSS",
	"tags": [],
	"description": "",
	"content": "SCSS is stricter more popular better, than SASS.\nPartials Partial SCSS files to link into main SCSS file, naming convention: (Use underscore infront of name) _partial.scss _partial2.scss\nWhen importing files use: @import \u0026ldquo;partial\u0026rdquo;; No, underscore, no file extension\nInheritance and @extend Works just like in any other programming language.\nMixins They are like functions in CSS, pretty cool if you ask me :D\nSass Guidelines\nExamples Inheritance .panel{ border: 3px solid dodgerblue; background: lightgreen; margin: 10px; } .little_panel{ @extend .panel; font-size: 12px; padding: 5px; } .big_panel{ @extend .panel; font-size: 32px; padding: 20px; } Nesting nav{ ul{ background-color: $bg_color; margin: 0; padding: 0; list-style: none; } li{ display: inline-block; } a{ color: $text_color; display: inline-block; padding: 10px 16px; text-decoration: none; } a:hover{ background-color: $hover_color; } } Variables $primary-color: green; $bg_color: #2c3e50; $hover_color: #160bc0; $text_color: white; Operators and Inheritance $button_background: #16A085; $button_color: #FFFFFF; $button_padding: 5px; .button{ background: $button_background; border-radius: 8px; color: $button_color; display: inline-block; padding: $button_padding; text-decoration: none; } .jumbo_button{ @extend .button; padding: $button_padding + 30; /* Don\u0026#39;t need units on 30, but its okay to write 30px as well */ } .light_button{ @extend .button; background: $button_background * 1.5; /* Multplying color \u0026gt; 1, lightens it \u0026lt; 1, darkens it */ } Mixin @mixinborderRadius($radius){ -webkit-border-radius: $radius; -moz-border-radius: $radius; -ms-border-radius: $radius; border-radius: $radius; } .panel{ border: 3px solid dodgerblue; background: lightgreen; margin: 10px; } .little_panel{ // Extend used for inheritance  @extend .panel; // Include used as a method or function  @includeborderRadius(8px); font-size: 12px; padding: 5px; } .big_panel{ @extend .panel; @includeborderRadius(200px); font-size: 32px; padding: 20px; } For Loop #{$i} is how you place the variable in a string format, if you need the variable to be evaulated as a number simply use $i.\n@for $i from 1 through 24 { #dec#{$i}--date { @includedatePositioning(2, visible); grid-area: d#{$i}; } #dec#{$i}--content { @includedatePositioning(1, hidden); @includedateBackgroundImage(\u0026#34;../img/#{$i}.png\u0026#34;); grid-area: d#{$i}; } } // Produces this 24 times, 1...24  #dec1--date { height: 100%; width: 100%; position: absolute; z-index: 2; visibility: visible; grid-area: d1; } #dec1--content { height: 100%; width: 100%; position: absolute; z-index: 1; visibility: hidden; background-image: url(\u0026#34;../img/1.png\u0026#34;); background-repeat: no-repeat; background-size: 112px 112px; grid-area: d1; } #dec1--content:hover { opacity: 0.3; } Snippets When passing in name of image into a mixin. Similar to for loop when passing in argument and then using it in a string.\n@mixinbgimage($name) { $url:\u0026#34;../images/#{$name}.png\u0026#34;; background: url($url); } "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/automation/",
	"title": "Automation",
	"tags": [],
	"description": "",
	"content": "Automation Gulp\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/git/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": "Industry standard version control.\nStash Stash is a good way to save changes before committing them if for example you want to change branches or merge something new into the branch you are working on. Think of git stash as a separate storage place to temporarily store your changes.\nStore changes in stash\ngit stash Retreive latest changes from stash\ngit stash pop Retreive specific changes from stash\ngit stash pop stash@{index_number} git stash pop stash@{1} List changes in stash\ngit stash list Show the most recent stash\ngit stash show -p Stash single file\ngit stash -- filename.txt Multiple Git Remotes http://caseyscarborough.com/blog/2013/08/25/pushing-to-multiple-remotes-using-git/\nUntrack files added to git based on gitignore http://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/database/",
	"title": "Database",
	"tags": [],
	"description": "",
	"content": "Database SQL\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/styling/flexbox/",
	"title": "Flexbox",
	"tags": [],
	"description": "",
	"content": "Flexbox defaults to aligning element horizontally.\nBasic structure is container with elements inside them.\n.container { display: flex; flex-direction: row; justify-content: space-evenly; /* Other values: flex-start flex-end center space-around space-between space-evenly */ } flex-direction : can be row horizontal or column vertical.\nFlex-direction The main axis is defined by the flex-direction property, and the cross axis runs perpendicular to it.\njustify-content : layout of elements along the main axis.\nalign-items : layout of elements along the cross axis.\nalign-self : used in elements to overwride align-items in parent.\nflex-wrap : wether or not elements wrap to new column or row.\nFlex flex is shorthand for flex-grow, flex-shrink, and flex-basis.\nflex-grow : Relative to other elements how fast the element grows after passing the flex-basis size.\nflex-shrink : Relative to other elements how fast the element shrinks after passing the flex-basis size.\nflex-basis : The base size of the element.\nOrder order : default value is 0, the order of the elements on the main axis. Value of -1 sets the element forward, while a value of 1 sets the element backward.\nAlign-content align-content\nExamples Move all elements to the right, except the first one, which should be on the right. Using auto for margin-right and margin-left.\n.container { border: 5px solid #ffcc5c; display: flex; justify-content: flex-end; } .home { margin-right: auto; } flex property makes element grow and shrink on resize.\n.container { border: 5px solid #ffcc5c; display: flex; } .home { flex: 1; } .logout { flex: 1; } Center div inside div using flex .container { display: flex; height: 100%; align-items: center; /* vertical alignment */ justify-content: center; /* horizontal alignment */ } "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/nginx/",
	"title": "Nginx",
	"tags": [],
	"description": "",
	"content": "Nginx is a high performance simple HTTP server, which can also be used as a reverse proxy, load balancer, etc. Similar to Apache web server, however NGINX is much faster and more lightweight.\nServing static files with NGINX using Docker Tutorial 1\nServing static files with NGINX using Docker Tutorial 2\nnginx.conf events {} http { server { listen 80; root /www; index index.html; location / { include /etc/nginx/mime.types; try_files $uri $uri/ /index.html; } } } "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/js-frameworks/",
	"title": "JS Frameworks",
	"tags": [],
	"description": "",
	"content": "JavaScript Frameworks Javascript\nVue\nPug\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/styling/bootstrap/",
	"title": "Bootstrap",
	"tags": [],
	"description": "",
	"content": "Mobile-first development responsive framework.\nCDN \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\u0026#34;\u0026gt; \u0026lt;!-- jQuery library --\u0026gt; \u0026lt;script src=\u0026#34;https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- Popper JS --\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- Latest compiled JavaScript --\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; npm install Run npm install bootstrap --save-dev to be able to use SCSS mixins.\nGrid System Default is based on 12 columns, so the numbers in each row add up to 12, if it needs to be in one row.\n\u0026lt;div class=\u0026#34;container\u0026#34; style=\u0026#34;margin-top:30px;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-sm-6 col-md-3\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-sm-6 col-md-3\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-sm-6 col-md-3\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-sm-6 col-md-3\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; col are columns in a row\nSize abbreviations  col - extra small screens (mobile phones) col-sm - small screens col-md - medium screens (tablets) col-lg - large screens (laptops)  Navigation Bar // navbar-light color scheme, bg-light is background light // navbar-expand-lg when large screen itt expands and doesn\u0026#39;t collapse // fixed top keeps navbar on top when scrolling \u0026lt;nav class=\u0026#34;navbar navbar-light bg-light navbar-expand-lg fixed-top\u0026#34;\u0026gt; // navbar-brand the logo on website \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;navbar-brand\u0026#34;\u0026gt;My Website\u0026lt;/a\u0026gt; // name the button the navbar-toggler to make it collapse // then identify what to collapse with data-target \u0026lt;button class=\u0026#34;navbar-toggler\u0026#34; data-toggle=\u0026#34;collapse\u0026#34; data-target=\u0026#34;#navbarCollapse\u0026#34;\u0026gt; // the three line icon \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; // Makes this part collapse in mobile \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarCollapse\u0026#34;\u0026gt; // ml-auto, margin left auto \u0026lt;ul class=\u0026#34;navbar-nav ml-auto\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Homepage\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Blog\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;About Me\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;nav-link\u0026#34;\u0026gt;Contact\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; Example \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Required meta tags --\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1, shrink-to-fit=no\u0026#34;\u0026gt; \u0026lt;!-- Bootstrap CSS --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\u0026#34; integrity=\u0026#34;sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello, world!\u0026lt;/title\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt; .row div { border: 1px solid silver; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-light bg-light navbar-expand-lg\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;navbar-brand\u0026#34;\u0026gt;My Website\u0026lt;/a\u0026gt; \u0026lt;button class=\u0026#34;navbar-toggler\u0026#34; data-toggle=\u0026#34;collapse\u0026#34; data-target=\u0026#34;#navbarCollapse\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarCollapse\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav ml-auto\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; \u0026gt;Homepage\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Blog\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; \u0026gt;About Me\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;navbar-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; \u0026gt;Contact\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;!-- \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-sm-3 col-md-2 bg-dark\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-sm-3 col-md-2\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-sm-3 col-md-2\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-6 col-sm-3 col-md-2\u0026#34;\u0026gt;column\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; --\u0026gt; \u0026lt;!-- Optional JavaScript --\u0026gt; \u0026lt;!-- jQuery first, then Popper.js, then Bootstrap JS --\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.2.1.slim.min.js\u0026#34; integrity=\u0026#34;sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\u0026#34; integrity=\u0026#34;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\u0026#34; integrity=\u0026#34;sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/scripting/",
	"title": "Scripting",
	"tags": [],
	"description": "",
	"content": "Scripting Bash\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/almanac/principles/",
	"title": "Software Principles",
	"tags": [],
	"description": "",
	"content": "DRY - Don\u0026rsquo;t repeat yourself Keep you code DRY means reducing duplicate code by using abstraction. The opposite of DRY code is WET, which means \u0026ldquo;Write everything twice\u0026rdquo;.\nSources\nhttps://deviq.com/don-t-repeat-yourself/\nYAGNI - You aren\u0026rsquo;t gonna need it Only implement things you actually need and not things you might need in the future. This helps with staying on track with completing tasks that are necessariy, instead of going down a rabbit hole trying to implement things you won\u0026rsquo;t even need.\nSources\nhttps://deviq.com/yagni/\nKISS - Keep it simple stupid Make sure the programs you create are kept as simple as possible without any unnecessary complications.\nSources\nhttps://en.wikipedia.org/wiki/KISS_principle\nSoC - Separation of Concerns Separate a program into different modules that concerns themselves of only one thing. A program which follows SoC is considered a modular program. Separate business logic from data transportation logic, etc.\nSources\nhttps://en.wikipedia.org/wiki/Separation_of_concerns\nSOLID An acronym of five principles to follow in Object-Oriented Programming to create clean and maintainable code.\nSR - Single Responsibity A class or module should only be responsible for one thing. Do not overstuff a class or module with functionality that should be placed into a separate module.\nSources\nhttps://deviq.com/single-responsibility-principle/\nInversion of Control "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/database/sql/",
	"title": "SQL",
	"tags": [],
	"description": "",
	"content": "Queries Insert into table dynamically using a loop DELIMITER $$ CREATE PROCEDURE genRecords() BEGIN DECLARE x INT DEFAULT 1; WHILE x \u0026lt; 10 DO INSERT INTO people (username, age) VALUES (\u0026#39;bob\u0026#39;, 34) SET x = x + 1; END WHILE; END; $$ DELIMITER ; call genRecords(); /* Delete procedure before modifiying it and creating a new one */ DROP PROCEDURE IF EXISTS genRecords; "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/styling/",
	"title": "Styling",
	"tags": [],
	"description": "",
	"content": "Styling CSS\nSCSS\nFlexbox\nBootstrap\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/automation/gulp/",
	"title": "Gulp",
	"tags": [],
	"description": "",
	"content": "Used to automate workflow of web development. \u0026ldquo;Swiss Army Knife of Web Development\u0026rdquo; Quote by Bucky from TheNewBoston.\n Tool for building JavaScript applications. Open source JavaScript toolkit \u0026amp; task runner. Used for time consuming \u0026amp; repetetive tasks.  Common Tasks  Compile SASS to CSS Minifaction of scripts and styles Concatenation Cache busing Testing, linting, \u0026amp; optimization Development server  How Gulp Works The plugin takes in files from folders modifies them and then writes the files to destination folder. Pipelines pipe() operator. Plugins can be created and google for popular plugins.\nTypes of Gulp functions  gulp.task - Define tasks gulp.src - Point to files to use gulp.dest - Points to folder to output gulp.watch - Watch files and folders for changes  Misc --save-dev means it will save dependency in our package.json file.\nInstruction on how to setup project Run npm rm gulp -g to remove any old version of gulp.\nRun npm install gulp-cli -g to add gulp as global command interface.\nTerminal command line:\n$ npm init Initialize project, creates package.json $ npm install gulp --save-dev Install gulp and creates node_modules folder with bunch of dependecies. Possibly look up why so many dependencies are made .in node_modules, cuz it did not happen to Bucky .in tutorial. $ npm install gulp-sass --save-dev Install sass precompiler Create folders:  app - for source code dist - generated automatically  Running gulp tasks: gulp \u0026lt;task_name\u0026gt;\ngulpfile.js Create gulpfile.js file in project directory. An example gulpfile.js file is shown below.\nvar gulp = require(\u0026#39;gulp\u0026#39;); var sass = require(\u0026#39;gulp-sass\u0026#39;); /* Template: gulp.task(\u0026#39;task_name\u0026#39;, function(){ // do something.. }); /* -- TOP LEVEL FUNCTIONS -- gulp.task - Define tasks gulp.src - Point to files to use gulp.dest - Points to folder to output gulp.watch - Watch files and folders for changes */ // Pipe is chain something together /* Returns scss file pipe it through sass and */ gulp.task(\u0026#39;sass\u0026#39;, function(){ return gulp.src(\u0026#39;app/scss/styles.scss\u0026#39;) .pipe(sass()) .pipe(gulp.dest(\u0026#39;app/css\u0026#39;)) }); Gulp Tasks Default Gulp Task The default task means when running just gulp in command line, this is the task that will be executed\n/* Default task */ gulp.task(\u0026#39;default\u0026#39;, async function () { return console.log(\u0026#39;Hello Gulp!\u0026#39;); }); Simple Message Gulp task to echo to command line.\n/* Need to make function async */ gulp.task(\u0026#39;message\u0026#39;, async function () { return console.log(\u0026#39;Hello Gulp!\u0026#39;); }); /* Need done argument because it assumes the task is synchronous */ gulp.task(\u0026#39;message2\u0026#39;, function(done){ console.log(\u0026#39;Gulp is runninng....\u0026#39;); done(); }); The reason for adding async is because since Gulp Verions 4.0 it is required. Here is a Stackoverflow post explaining why.\nCopying Files Copying a certain type of file to a directory. This example all HTML files in src directory will be copied to dist directory.\n// Copy ALL HTML files // dist folder created automatically gulp.task(\u0026#39;copyHtml\u0026#39;, function(){ return gulp.src(\u0026#39;src/*.html\u0026#39;) .pipe(gulp.dest(\u0026#39;dist\u0026#39;)) }); Sass to minified CSS Run npm install gulp-clean-css --save-dev in command line to install clean-css plugin.\nRun npm install gulp-sass -‚Äîsave-dev in command line to install Sass to CSS compiler plugin.\nconst sass = require(\u0026#39;gulp-sass\u0026#39;); const cleanCSS = require(\u0026#39;gulp-clean-css\u0026#39;); gulp.task(\u0026#39;sass\u0026#39;, function(){ return gulp.src(\u0026#39;src/scss/main.scss\u0026#39;) .pipe(sass()) .pipe(cleanCSS()) .pipe(gulp.dest(\u0026#39;src/css\u0026#39;)) .pipe(browserSync.stream()); // Also refreshes browser }) Image Optimizaton Run $ npm install gulp-imagemin --save-dev in command line to install gulp plugin. Then require it in our gulp file.\nconst imagemin = require(\u0026#39;gulp-imagemin\u0026#39;) // Image optimization gulp.task(\u0026#39;imagemin\u0026#39;, () =\u0026gt; gulp.src(\u0026#39;img/*\u0026#39;) .pipe(imagemin()) .pipe(gulp.dest(\u0026#39;dist/images\u0026#39;)) ); Uglify Javascript Run $ npm install gulp-uglify --save-dev\nNote: This does not work with ES6 and TypeScript standards, only plain JavaScript.\nI am personally not using this one.\nconst uglify = require(\u0026#39;gulp-uglify\u0026#39;) // Javascript minifying gulp.task(\u0026#39;minify\u0026#39;, () =\u0026gt; gulp.src(\u0026#39;js/*.js\u0026#39;) .pipe(uglify()) .pipe(gulp.dest(\u0026#39;dist\u0026#39;)) ); Minify Javascript Run $ npm install gulp-minify --save-dev\nMinifies javascript files.\nDefault configuration: src: main.js -\u0026gt; dest: main.min-js, main.js ‚Äî Basically source file is copied as well and a new minified is made.\nMy configuration (the one below): src: main.js -\u0026gt; dest: main.js ‚Äî Source file isn\u0026rsquo;t copied and destination is called the same as source file.\nconst minify = require(\u0026#39;gulp-minify\u0026#39;) // Javascript minifying gulp.task(\u0026#39;scripts\u0026#39;, () =\u0026gt; { return gulp.src(\u0026#39;src/js/*.js\u0026#39;) .pipe(minify({ ext:{ min:\u0026#39;.js\u0026#39; // Destination files will be called the same as source files  }, noSource: true, // Source files are not published  })) .pipe(gulp.dest(\u0026#39;js\u0026#39;)) }); Run all tasks by default Give the default tasks and array of tasks to execute. gulp.series makes the tasks run in series, one after another.\ngulp.task(\u0026#39;default\u0026#39;, gulp.series(\u0026#39;message\u0026#39;, \u0026#39;copyHtml\u0026#39;, \u0026#39;imagemin\u0026#39;)); Concat and Minify JavaScript files Run $ npm install gulp-concat --save-dev\nMerge all JavaScript files into one and then minify it.\nconst concat = require(\u0026#39;gulp-concat\u0026#39;); // Combine and minify Javascript files gulp.task(\u0026#39;scripts\u0026#39;, () =\u0026gt; gulp.src(\u0026#39;js/*.js\u0026#39;) .pipe(concat(\u0026#39;main.js\u0026#39;)) .pipe(uglify()) .pipe(gulp.dest(\u0026#39;dist\u0026#39;)) ); Gulp Watch Watch specific files for changes and if changes occur run some tasks. After setting up watch task, run gulp watch. This will watch the files for changes and apply the tasks when changes occur. Ctrl + C to exit watch.\ngulp.task(\u0026#39;watch\u0026#39;, function(){ // Watch all javascript files and if changes occure run scripts tasks  gulp.watch(\u0026#39;src/js/*.js\u0026#39;, gulp.series(\u0026#39;scripts\u0026#39;)); gulp.watch(\u0026#39;src/images/*\u0026#39;, gulp.series(\u0026#39;imagemin\u0026#39;); gulp.watch(\u0026#39;src/scss/*.scss\u0026#39;, gulp.series(\u0026#39;sass\u0026#39;)); gulp.watch(\u0026#39;src/*.html\u0026#39;, gulp.series(\u0026#39;copyHtml\u0026#39;)); }); Browser Sync Run $ npm install browser-sync --save-dev\nRun gulp browser-sync and server starts up on localhost:3000. Ctrl + C to stop server.\nNote: Look more into browser sync for auto reload, etc.\nBrowsersync.io\nconst browserSync = require(\u0026#39;browser-sync\u0026#39;).create(); // Static server gulp.task(\u0026#39;browser-sync\u0026#39;, function() { browserSync.init({ server: { baseDir: \u0026#34;./\u0026#34; } }); }); Babel Run $ npm install babel-core --save-dev\nRun $ npm install gulp-babel --save-dev\nRun npm install --save-dev @babel/core @babel/preset-env\nRun npm install --save-dev babel-preset-es2015\nBabel is an Javascript compiler that can compile ES6 standard code (modules, etc) into ES6 standard code.\nconst babel = require(\u0026#39;gulp-babel\u0026#39;); const uglify = require(\u0026#39;gulp-uglify\u0026#39;); gulp.task(\u0026#39;scripts\u0026#39;, () =\u0026gt; { return gulp.src(\u0026#39;src/**/*.js\u0026#39;) .pipe(babel({ presets: [\u0026#39;es2015\u0026#39;] })) .pipe(uglify()) .pipe(gulp.dest(\u0026#39;dist\u0026#39;)) }); Example 1 gulpfile.js const gulp = require(\u0026#39;gulp\u0026#39;); const sass = require(\u0026#39;gulp-sass\u0026#39;); const cleanCSS = require(\u0026#39;gulp-clean-css\u0026#39;); const imagemin = require(\u0026#39;gulp-imagemin\u0026#39;); const minify = require(\u0026#39;gulp-minify\u0026#39;); const inject = require(\u0026#39;gulp-inject\u0026#39;); const browserSync = require(\u0026#39;browser-sync\u0026#39;).create(); const del = require(\u0026#39;del\u0026#39;); /* Need done argument because it assumes the task is synchronous */ gulp.task(\u0026#39;message\u0026#39;, function(done){ console.log(\u0026#39;Gulp is runninng....\u0026#39;); done(); }); // Copy ALL HTML files // dest folder created automatically gulp.task(\u0026#39;copy-html\u0026#39;, function(){ return gulp.src(\u0026#39;src/*.html\u0026#39;) .pipe(gulp.dest(\u0026#39;./\u0026#39;)) }); // Copy ALL js files // dest folder created automatically gulp.task(\u0026#39;copy-js\u0026#39;, function(){ return gulp.src(\u0026#39;src/js/*\u0026#39;) .pipe(gulp.dest(\u0026#39;js\u0026#39;)) }); // Copy ALL css files // dest folder created automatically gulp.task(\u0026#39;copy-css\u0026#39;, function(){ return gulp.src(\u0026#39;src/css/*\u0026#39;) .pipe(gulp.dest(\u0026#39;css\u0026#39;)) }); // Copy ALL css files // dest folder created automatically gulp.task(\u0026#39;copy-files\u0026#39;, function(){ return gulp.src(\u0026#39;src/files/**/*\u0026#39;) .pipe(gulp.dest(\u0026#39;files\u0026#39;)) }); // Image optimization gulp.task(\u0026#39;image-min\u0026#39;, () =\u0026gt; gulp.src(\u0026#39;src/img/*\u0026#39;) .pipe(imagemin()) .pipe(gulp.dest(\u0026#39;img\u0026#39;)) ); // Javascript minifying gulp.task(\u0026#39;scripts\u0026#39;, () =\u0026gt; { return gulp.src(\u0026#39;src/js/*.js\u0026#39;) .pipe(minify({ ext:{ min:\u0026#39;.js\u0026#39; }, noSource: true, })) .pipe(gulp.dest(\u0026#39;js\u0026#39;)) }); // Pipe is chain something together /* Returns SCSS file pipe it through sass and */ gulp.task(\u0026#39;sass\u0026#39;, function(){ return gulp.src(\u0026#39;src/scss/main.scss\u0026#39;) .pipe(sass()) .pipe(cleanCSS()) .pipe(gulp.dest(\u0026#39;src/css\u0026#39;)) .pipe(browserSync.stream()); }); /* Inject CSS into HTML Later also inject Javascript */ gulp.task(\u0026#39;inject-index\u0026#39;, function () { // var target = gulp.src(\u0026#39;./src/index.html\u0026#39;);  // // It\u0026#39;s not necessary to read the files (will speed up things), we\u0026#39;re only after their paths:  // var sources = gulp.src([\u0026#39;./src/css/*.css\u0026#39;], {read: false}, {relative: true} );  // return target.pipe(inject(sources))  // .pipe(gulp.dest(\u0026#39;./src\u0026#39;));  // Pipe relative path  return gulp.src(\u0026#39;./src/*.html\u0026#39;) .pipe(inject(gulp.src(\u0026#39;./src/css/*.css\u0026#39;, {read: false}), {relative: true})) .pipe(gulp.dest(\u0026#39;./src\u0026#39;)); }); // Static server gulp.task(\u0026#39;serve\u0026#39;, function() { browserSync.init({ server: { baseDir: \u0026#34;./src/\u0026#34; } }); // Make broswer sync on change in SASS and CSS  gulp.watch(\u0026#34;src/scss/*.scss\u0026#34;, gulp.series(\u0026#39;sass\u0026#39;)); // gulp.watch(\u0026#34;src/*.html\u0026#34;, gulp.series(\u0026#39;inject-index\u0026#39;));  gulp.watch(\u0026#34;src/*.html\u0026#34;).on(\u0026#39;change\u0026#39;, browserSync.reload); gulp.watch(\u0026#34;src/js/*.js\u0026#34;).on(\u0026#39;change\u0026#39;, browserSync.reload); }); // Watch can be called here separately, but it is called when gulp browser sync is started gulp.task(\u0026#39;watch\u0026#39;, function(){ // Watch all javascript files and if changes occure run scripts tasks  gulp.watch(\u0026#39;src/scss/*\u0026#39;, gulp.series(\u0026#39;sass\u0026#39;)); //gulp.watch(\u0026#39;src/*.html\u0026#39;, gulp.series(\u0026#39;copy-html\u0026#39;)); }); /* Copy all files in dist folder to project folder */ gulp.task(\u0026#39;copy-dist\u0026#39;, function(){ return gulp.src(\u0026#39;dist/**/*\u0026#39;) .pipe(gulp.dest(\u0026#39;./\u0026#39;)) }); gulp.task(\u0026#39;clean\u0026#39;, function(){ return del([\u0026#39;js\u0026#39;, \u0026#39;css\u0026#39;, \u0026#39;img\u0026#39;, \u0026#39;files\u0026#39;, \u0026#39;index.html\u0026#39;, \u0026#39;favicon.ico\u0026#39;], {force:true}); }); gulp.task(\u0026#39;deploy\u0026#39;, gulp.series(\u0026#39;clean\u0026#39;, \u0026#39;copy-dist\u0026#39;)); gulp.task(\u0026#39;default\u0026#39;, gulp.series(\u0026#39;image-min\u0026#39;, \u0026#39;sass\u0026#39;, \u0026#39;scripts\u0026#39;, \u0026#39;inject-index\u0026#39;, \u0026#39;copy-html\u0026#39;, \u0026#39;copy-css\u0026#39;, \u0026#39;copy-files\u0026#39;)); Example 2 gulpfile.js const gulp = require(\u0026#39;gulp\u0026#39;); const imagemin = require(\u0026#39;gulp-imagemin\u0026#39;); const del = require(\u0026#39;del\u0026#39;); const exec = require(\u0026#39;child_process\u0026#39;).exec; const jsonminify = require(\u0026#39;gulp-jsonminify\u0026#39;); /* Need done argument because it assumes the task is synchronous */ gulp.task(\u0026#39;message\u0026#39;, function (done) { console.log(\u0026#39;Gulp is running....\u0026#39;); done(); }); /* Run `npm run build` command inside gulp */ gulp.task(\u0026#39;build\u0026#39;, function (cb) { exec(\u0026#39;npm run build\u0026#39;, function (err, stdout, stderr) { console.log(stdout); console.log(stderr); cb(err); }); }); /* Minify JSON files */ gulp.task(\u0026#39;minify-json\u0026#39;, function () { return gulp.src([\u0026#39;dist/database/*.json\u0026#39;]) .pipe(jsonminify()) .pipe(gulp.dest(\u0026#39;dist/database/\u0026#39;)); }); // Copy ALL files // dest folder created automatically gulp.task(\u0026#39;copy-files\u0026#39;, function () { return gulp.src(\u0026#39;src/files/**/*\u0026#39;) .pipe(gulp.dest(\u0026#39;files\u0026#39;)) }); // Image optimization gulp.task(\u0026#39;image-min\u0026#39;, () =\u0026gt; gulp.src(\u0026#39;src/img/*\u0026#39;) .pipe(imagemin()) .pipe(gulp.dest(\u0026#39;img\u0026#39;)) ); /* Copy all files in dist folder to project folder */ gulp.task(\u0026#39;copy-dist\u0026#39;, function () { return gulp.src(\u0026#39;dist/**/*\u0026#39;) .pipe(gulp.dest(\u0026#39;./\u0026#39;)) }); gulp.task(\u0026#39;clean\u0026#39;, function () { return del([\u0026#39;js\u0026#39;, \u0026#39;css\u0026#39;, \u0026#39;img\u0026#39;, \u0026#39;files\u0026#39;, \u0026#39;database\u0026#39;, \u0026#39;index.html\u0026#39;, \u0026#39;favicon.ico\u0026#39;], { force: true }); }); gulp.task(\u0026#39;deploy\u0026#39;, gulp.series(\u0026#39;build\u0026#39;, \u0026#39;minify-json\u0026#39;, \u0026#39;clean\u0026#39;, \u0026#39;copy-dist\u0026#39;)); "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/scripting/bash/",
	"title": "Bash",
	"tags": [],
	"description": "",
	"content": "Bash Commands  atom . : Open current directory in Atom code . : Open current directory in Visual Studio Code code \u0026lt;directory\u0026gt; : Open directory in Visual Studio Code open \u0026lt;directory\u0026gt; : Open directory in Finder node (.*).js : Run javascript file in bash  https://tecadmin.net/tutorial/bash-scripting/bash-command-arguments/\n tail -f \u0026lt;log-file\u0026gt;  Grep cat file.txt | grep \u0026#34;title\u0026#34; Bash Snippets For loop #!/bin/sh  for x in dog elephant fish; do echo $x done If-Else statement #!/bin/sh  if [ $1 = hotdog ]; then echo \u0026#34;You typed hotdog\u0026#34; else echo You did NOT type Hotdog echo it was \u0026#39;\u0026#34;\u0026#39;$1\u0026#39;\u0026#34;\u0026#39; fi Bash commands #!/bin/sh # # This program is going to be awesome echo \u0026#34;Progam is starting...\u0026#34; ls -la Links Bash Tutorial\nCheatsheet\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/python/lessons/",
	"title": "Lessons",
	"tags": [],
	"description": "",
	"content": "Zen of Python In any Python interpreter run the following command\nimport this These Python principles to follow when coding in Python.\nstrip() Method The strip method and its cousins, lstrip and rstrip can cause bugs if used without knowing how exactly it works. One can assume that it strips a sequence of character from a string, and lstrip and rstrip strips the leading and trailling character sequence, respectively. However this is not how it works, these strip methods take a set of character, meaning it will check each character separately and remove them from the string.\nExample For example, you might want to remove the path/ substring from the string path/panther.xml. If you decide to use lstrip it will cause unintended consequences, since it will remove the set of characters p, a, t, h, and / from the string if they are the leading characters. Since the p and a characters of the panther.xml substring fall into the set of characters to strip, it will remove those as well, and you will be left with the string nther.\nIn a scenario like this, I would suggest to use the replace method, and replace the path/ substring with an empty string. You should also set the count argument to 1 to make sure only the first occurence is replaced, to safeguard from any other unintented consequences.\npanther = \u0026#34;path/panther.xml\u0026#34; panther.lstrip(\u0026#34;path/\u0026#34;) # Prints: nther.xml panther.replace(\u0026#34;path/\u0026#34;, \u0026#34;\u0026#34;, 1) # Prints: panther.xml Usage What strip is really good at is removing leading and trailing whitespaces, when no arguments are given and removing sets of characters, but just be careful it does as you intend it to work.\nSo the lesson here is to always read the official documentation to know exactly how a given method works and don\u0026rsquo;t assume you know how a method works just from the name.\nvars() Method Return the __dict__ attribute of an Object. Useful for turning the attributes of an instance into a dictionary. Note, it disregards class attributes.\nResponse and Jsonify jsonify() returns a Response object, but already populate with the correct mimetype and etc.\nResponse(\u0026#34;{ \u0026#39;a\u0026#39;: \u0026#39;abc\u0026#39; }\u0026#34;, status=200, mimetype=\u0026#39;application/json\u0026#39;) jsonify() "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/python/",
	"title": "Python",
	"tags": [],
	"description": "",
	"content": "Python Lessons\nTesting\nVirtual Environment\nExternal Sources Automation\nAnti Patterns\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/",
	"title": "Technology",
	"tags": [],
	"description": "",
	"content": "Technology Docker\nGit\nNGINX\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/python/testing/",
	"title": "Testing",
	"tags": [],
	"description": "",
	"content": "Mocking Mock is useful when mocking the parameter passed into a specific class during the instantiation of the class. Then you can mock attributes of that parameter, which will be called instead of an actual parameter being passed to the contructor.\nIn the example below, the gateway is mocked and dummy data is given as the return value for the get_something method of the gateway. In this case, only the get_upper_something is unit tested, while the dependecies are mocked out.\nfrom unittest.mock import Mock class Service(): def __init__(self, gateway): self.gateway = gateway def get_upper_something(self): return gateway.get_something() def test_get_upper_something(): gateway = Mock() gateway.get_something.return_value = [1, 2] service = Service(gateway) service.get_upper_something() assert result == [1, 2] "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/almanac/interesting/",
	"title": "Interesting",
	"tags": [],
	"description": "",
	"content": "Gambler\u0026rsquo;s Fallacy  The false assumption that past independent events have an effect on future outcomes.\n Gambler\u0026rsquo;s tend to make a false assumption that if you have been on a losing streak for a while, then the chances of winning will increase since you have not won in a while. There is a false sense of balancing in one\u0026rsquo;s mind. That the losing streaks and winning streaks will eventually balance out.\nSources\nhttps://psychologenie.com/gamblers-fallacy-definition-examples\nPigeon hole principle  The pigeonhole principle states that if n items are put into m containers, with n \u0026gt; m, then at least one container must contain more than one item.\n Sources\nhttps://medium.com/cantors-paradise/the-pigeonhole-principle-e4c637940619\nInfinite monkey theorem  The infinite monkey theorem states that a monkey hitting keys at random on a typewriter keyboard for an infinite amount of time will almost surely type any given text, such as the complete works of William Shakespeare.\n Sources\nhttps://en.wikipedia.org/wiki/Infinite_monkey_theorem\nSoftware Archaeology Software archaelogy is the study of old legacy code, usually with little to no documentation.\n Everything that is there is there for a reason, and there are 3 possible reasons:\n It used to need to be there but no longer does It never needed to be there and the person that wrote the code had no clue It STILL needs to be there and YOU have no clue  The corollary to this \u0026ldquo;law\u0026rdquo; is that, until you know which was the reason, you should NOT modify the code (or data).\n Sources\nhttps://en.wikipedia.org/wiki/Software_archaeology\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/python/venv/",
	"title": "Virtual Environment",
	"tags": [],
	"description": "",
	"content": "Virtual environments, or venv, create a containerized environment of running your Python applications. You install all the Python packages you use for a specific program in one virtual environment.\nSystem Installation When you simply run python --version in your terminal, you get the version that is installed on your computer. That is mostly likely sourced from your /usr/local/bin directory.\nCheck where pip3 is sourced from and check which version are you running.\nwhich pip3 pip3 --version List installed packages on your system.\npip3 list Create virtual environment with the name of \u0026lt;venv_name\u0026gt; in your current directory.\npython3 -m venv \u0026lt;venv_name\u0026gt; Activate that virtual environment.\nsource \u0026lt;venv_name\u0026gt;/bin/activate Print on the screen a list of installed in a specific format for import and export.\npip freeze Create requirements.txt.\npip freeze \u0026gt; requirements.txt Deactivate virtual environment and delete it.\ndeactivate rm -rf \u0026lt;venv_name\u0026gt; Install packages into virtual environment from requirements.txt.\npip install -r requirements.txt "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/js-frameworks/js/",
	"title": "Javascript",
	"tags": [],
	"description": "",
	"content": "Regular Expressions Good interactive tutorial on Regex.\nJavascript Regex\nRegex Article\nvar state = \u0026#34;2x10\u0026#34;; var pattern = /\\d+/g; var result = state.match(pattern); // result equals [\u0026#39;2\u0026#39;, \u0026#39;10\u0026#39;] Operations Spread operator Spread operator is used to unpack an array an give the elements as parameters to a method. It is useful for things such as giving an array to the Math.max method to determine the element with the maximum value in the array.\nfunction getSecondLargest(nums) { let uniq = [...new Set(nums)] let index = uniq.indexOf(Math.max(...uniq)) uniq.splice(index, 1) return Math.max(...uniq) }  https://www.hackerrank.com/challenges/js10-arrays/problem\n Fetch API https://flaviocopes.com/fetch-api/\nApply function https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\nTemplate literals https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\nReverse string https://www.freecodecamp.org/news/how-to-reverse-a-string-in-javascript-in-3-different-ways-75e4763c68cb/\nStrings https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\nPromises https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\nArrow https://www.w3schools.com/js/js_arrow_function.asp\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/js-frameworks/vue/",
	"title": "Vue",
	"tags": [],
	"description": "",
	"content": "Vue.js Front end javascript framework to build static and dynamic websites. Vue fundamentally changes how you think of web development.\nVue Instance The heart of the application.\nvar app = new Vue({ el: \u0026#34;#app\u0026#34;, data: { name: \u0026#39;Application\u0026#39; } }) Vue Expression Vue expressions can express all kinds of following JavaScript logic including string manipulation, tenirary operator, and built-in JavaScript functions.\n\u0026lt;h1\u0026gt;{{ product }}\u0026lt;/h1\u0026gt; {{ product + \u0026#39;!\u0026#39; }} {{ firstName + \u0026#39; \u0026#39; + lastName }} {{ clicked ? true : false }} {{ message.split(\u0026#39;\u0026#39;).reverse().join(\u0026#39;\u0026#39;) }} Best Practices\nLook at Scrimba videos as well.\nJavascript Refresher To turn on strict mode in Javascript add use strict to top of Javascript file, to omit a few warnings. Strict mode makes it easier to write \u0026ldquo;secure\u0026rdquo; JavaScript.\n\u0026#34;use strict\u0026#34; Objects are like structs in other programming languages.\nvar obj1 = { key1: \u0026#34;val1\u0026#34;, // or \u0026#34;key1\u0026#34; \tkey2: \u0026#34;val2\u0026#34; } console.log(obj1) console.log(obj1.key1) // console.log(obj1.key2) // console.log(obj1[\u0026#34;key1\u0026#34;]) // console.log(obj1[\u0026#34;key2\u0026#34;])  // Nesting objects var obj2 = { obj3: { key1: \u0026#34;val1\u0026#34;, key2: \u0026#34;val2\u0026#34; }, } // console.log(obj2) // console.log(obj2.obj3) // console.log(obj2.obj3.key1) // console.log(obj2.obj3.key2) // console.log(obj2.obj3[\u0026#34;key1\u0026#34;]) // console.log(obj2.obj3[\u0026#34;key2\u0026#34;])  Debug mode in Vue By addign keyword debug to HTML element tags, it triggers debug mode for that elements and all children elements.\n\u0026lt;body debug\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt; \u0026lt;!-- different ways to render data in DOM, most simplest: {{ }} --\u0026gt; \u0026lt;p\u0026gt;{{ message }}\u0026lt;/p\u0026gt; \u0026lt;!-- v-text tag renders message as plain text --\u0026gt; \u0026lt;p v-text=\u0026#34;message\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;!-- v-html tag renders message as HTML --\u0026gt; \u0026lt;p v-html=\u0026#34;message_2\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app = new Vue({ // el specifiy where in the DOM to render the app \tel: \u0026#34;#app\u0026#34;, data: { message: \u0026#34;hello world!\u0026#34;, message_2: \u0026#34;hello \u0026lt;br\u0026gt; world!\u0026#34; } }) \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; Separation of Concern Separate data from HTML.\nVirtualization the DOM. (Virtual DOM)\nTwo-binding. Bind the user input and HTML element. Using v-model tag\nProperty is a variable attached to an object. Method is a function attached to an object.\nTemplate Serves as an invisible wrapper.\n\u0026lt;template\u0026gt; \u0026lt;/template\u0026gt; Directive v-model Two-way binding\nTwo way data bindings on form input and elements. Keeps DOM and Vue app in sync.\nv-bind One-way binding\nShort version :\nAttribute binding, binds attribute with expression in virtual DOM.\n:alt=\u0026quot;description\u0026quot; :href=\u0026quot;url\u0026quot; :class=\u0026quot;isActive\u0026quot; v-show Just makes element display hidden, instead of not rendering it as with v-if and v-else\nMakes for better performance.\nv-show='true' Element is visible v-show='false' Element is hidden v-on Event Handling, such as click, hover mouse over, etc.\nShort version: @\n@mouseover @click @submit @keyup.enter Conditional Rendering \u0026lt;span v-if=\u0026quot;seen \u0026gt; 100\u0026quot;\u0026gt;ABC\u0026lt;/span\u0026gt; \u0026lt;span v-if-else=\u0026quot;seen \u0026lt; 10 \u0026amp;\u0026amp; seen \u0026gt; 5\u0026quot;\u0026gt;DEF\u0026lt;/span\u0026gt; \u0026lt;span v-else\u0026gt;EFG\u0026lt;/span\u0026gt; List Rendering \u0026lt;div v-for=\u0026quot;element in list\u0026quot; :key=\u0026quot;element.id\u0026quot;\u0026gt;{{ element.name }}\u0026lt;/div\u0026gt; Communicating Events Emit data from child components to parent component.\nStyling with Vue Components Most powerful feature a Vue. Makes code more reusable and markup more readable. Make a block of code a smaller block of code.\nBest practice: HTML elements without hypens, Vue components name with hyphens.\nComponent Lifecycle\n/* created(): since the processing of the options is finished you have access to reactive data properties and change them if you want. At this stage DOM has not been mounted or added yet. So you cannot do any DOM manipulation here. Typically used for data fetching */ created() { }, /* mounted(): called after the DOM has been mounted or rendered. Here you have access to the DOM elements and DOM manipulation can be performed for example get the innerHTML: */ mounted() { }, Components are like HTML functions. When a component is created, you essentially make a custom HTML tag. The props field represents property, which you set inside the component\u0026rsquo;s HTML tag. The : in :name indicates that it is a Vue attribute. So the value you give to :name is looked for in th Vue apps data field.\n\u0026lt;animal :name=\u0026#34;dog\u0026#34;\u0026gt;\u0026lt;/animal\u0026gt; \u0026lt;script\u0026gt; Vue.component(\u0026#34;animal\u0026#34;, { props: [\u0026#34;name\u0026#34;], template: \u0026#39;\u0026lt;p v-html=\u0026#34;name\u0026#34;\u0026gt;\u0026lt;/p\u0026gt;\u0026#39; }) var app = new Vue({ el: \u0026#34;#app\u0026#34;, data: { dog: \u0026#34;Doggy!\u0026#34;, cat: \u0026#34;Kitty!!\u0026#34;, bird: \u0026#34;Birdy!!!\u0026#34; } }) \u0026lt;/script\u0026gt; @click triggers when clicked on, :class chooses which class is this element belongs to, used for styling.\n\u0026lt;div id=\u0026#34;app\u0026#34; :style=\u0026#34;{ background: background() }\u0026#34;\u0026gt; \u0026lt;p v-html=\u0026#34;actice\u0026#34; @click=\u0026#34;animagus\u0026#34; :class=\u0026#34;breathe()\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; Control-Flow The way we control the flow of the program through conditional statements and loops.\nLessons Prevent on click on parent when clicking button inside div Event modifier, @click.stop is placed on child element, in order for parent element click not to fire.\n\u0026lt;li v-for=\u0026#34;tab in tabs\u0026#34; class=\u0026#34;nav-item\u0026#34; :id=\u0026#34;tab.name\u0026#34; @click=\u0026#34;currentTab = tab.name\u0026#34;\u0026gt; {{ tab.name }} \u0026lt;ul v-if=\u0026#34;tab.subtabs != null\u0026#34; class=\u0026#34;sub-menu\u0026#34;\u0026gt; \u0026lt;ul v-for=\u0026#34;subtab in tab.subtabs\u0026#34; class=\u0026#34;submenu-item\u0026#34; :id=\u0026#34;subtab.name\u0026#34; @click.stop=\u0026#34;currentTab = subtab.name\u0026#34;\u0026gt; {{ subtab.name }} \u0026lt;/ul\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; Timeout in Vue js component Add a bind() call to your function declaration:\nsetTimeout(function () { this.fetchHole() }.bind(this), 1000) So that your Vue component\u0026rsquo;s this is accessible within the function.\nEnvironmental Variables https://cli.vuejs.org/guide/mode-and-env.html\nhttps://medium.com/js-dojo/how-to-use-environment-variables-in-vue-js-273eba0102b0\nMake sure you name the environmental variables starting with VUE_APP_ in order for it to work.\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/js-frameworks/pug/",
	"title": "Pug",
	"tags": [],
	"description": "",
	"content": "Interpolation using Javascript https://pugjs.org/language/attributes.html\nhttps://pugjs.org/language/interpolation.html\nInjecting data from JSON https://tusharghate.com/rendering-pug-templates-with-multiple-data-files\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/almanac/todo/",
	"title": "Todo",
	"tags": [],
	"description": "",
	"content": " API - Application Programming Interface REST Dependency Injection Schrodinger\u0026rsquo;s Backup Heisenbug Magic Number Cargo cult programming Inheritance Object-oriented programming CLI - Command Line Interface Package manager Collapsing margins Continous Integration DevOps Clean code Refactor Proxy Cloud HTTP CRUD - Create, Read, Update, Delete ACID Boilerplate MVC - Model, View, Controller Version Control Build Automation CMS - Content Management System Unit Testing Gateway Factory Service Mocking Method Function Class Interface Agile Scrum Unix Scripting Bash Terminal Functional Programming Aritifical Intelligence (AI) Machine Learning (ML) SQL Injection Cross-site Scripting Web crawler SEO - Search Engine Optimization IDE - Integrated Development Environment OS - Operating System Composition Mixin Load balancing Auto scaling ASCII Unicode UTF Pure function Design Stamina Hypothesis Postmortem documentation Database normalization Greenfield project Shebang Sentinal value Elephant in Cairo Canary deployment Cicada principle Metasyntactic variable  Any fool can write code that a computer can understand. Good programmers write code that humans can understand. ‚ÄîMartin Fowler\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/",
	"title": "A Developer&#39;s Journal",
	"tags": [],
	"description": "",
	"content": "A Developer\u0026rsquo;s Journal Welcome to my Developer\u0026rsquo;s Journal, where I keep a journal of the knowledge I gained throughout career as a software developer. The purpose of this journal is to maintain a digital notebook to record programming snippets and document new programming techniques. Most of what you find in this journal are small explanations of concepts, code snippets, and links to external sources. Feel free to use any of the resources, however please do your own research on the subjects, as there could be better explanations and solutions than what I have found and developed.\nTools I use Hugo as a static site generator to render the markdown files in my journal. More specifically, I chose the Hugo Learn Theme, since it is best suited for my needs of displaying my journal in a presentable and pleasant format. And for writing the pages of the journal, I use Typora, a lightweight yet stylish markdown editor. And when I make structural changes and developments to the website, I use Visual Studio Code as my go-to editor.\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/git/glo/",
	"title": "Glo Boards",
	"tags": [],
	"description": "",
	"content": "The GitKraken client also has a feature called Glo Boards. It is similar to Trello however it has better features that make it more desirable for developers. Here is an article explaining the advantages of Glo Boards over Trello. Here are a few.\n First of all, it visually looks much cooler. Built in integration with Github issues. Much better search functionality  Usage You can add a synced board to one of your Github repos. Which means that all cards created on that board will become issues in your Github repo. This basically connects and syncs the two entities so you can track and organize your issues.\nWorkflow  Create cards in board to refer to issues and development. Create commit that fixes issue related to card and use specific keywords in commit message to refer to fixing issues, explained here. So use keywords like Fix #12, Close #10, or Resolve #11 to close issues. Note, make sure the issue number e.g. #10 has one of the keyword in front of it. Don\u0026rsquo;t do this: Fix #10, #12 , because only #10 will be registered. When the development branch is merged to the master branch, that is when the issues will be resolved on Github.  "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]