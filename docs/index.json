[
{
	"uri": "https://gaborkevinbarta.com/developers-journal/python/",
	"title": "Python",
	"tags": [],
	"description": "",
	"content": "Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": "Introduction Lorem Ipsum.\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/",
	"title": "Technology",
	"tags": [],
	"description": "",
	"content": "Technology Docker\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/js-frameworks/",
	"title": "JS Frameworks",
	"tags": [],
	"description": "",
	"content": "Chapter: JS Frameworks Vue\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/",
	"title": "A Developer&#39;s Journal",
	"tags": [],
	"description": "",
	"content": "A Developer\u0026rsquo;s Journal Welcome to my Developer\u0026rsquo;s Journal, where I keep a journal of the knowledge I gained through my software development career.\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/js-frameworks/js/",
	"title": "Javascript",
	"tags": [],
	"description": "",
	"content": "JavaScript Operations Spread operator Spread operator is used to unpack an array an give the elements as parameters to a method. It is useful for things such as giving an array to the Math.max method to determine the element with the maximum value in the array.\nfunction getSecondLargest(nums) { let uniq = [...new Set(nums)] let index = uniq.indexOf(Math.max(...uniq)) uniq.splice(index, 1) return Math.max(...uniq) }  https://www.hackerrank.com/challenges/js10-arrays/problem\n Apply function https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/git/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": "Industry standard version control.\nStash Stash is a good way to save changes before committing them if for example you want to change branches or merge something new into the branch you are working on. Think of git stash as a separate storage place to temporarily store your changes.\nStore changes in stash\ngit stash Retreive changes from stash\ngit stash pop List changes in stash\ngit stash list Show the most recent stash\ngit stash show -p Stash single file\ngit stash -- filename.txt Multiple Git Remotes http://caseyscarborough.com/blog/2013/08/25/pushing-to-multiple-remotes-using-git/\nUntrack files added to git based on gitignore http://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/basics/python/",
	"title": "Python",
	"tags": [],
	"description": "",
	"content": "Lessons strip() Method The strip method and its cousins, lstrip and rstrip can cause bugs if used without knowing how exactly it works. One can assume that it strips a sequence of character from a string, and lstrip and rstrip strips the leading and trailling character sequence, respectively. However this is not how it works, these strip methods take a set of character, meaning it will check each character separately and remove them from the string.\nExample For example, you might want to remove the path/ substring from the string path/panther.xml. If you decide to use lstrip it will cause unintended consequences, since it will remove the set of characters p, a, t, h, and / from the string if they are the leading characters. Since the p and a characters of the panther.xml substring fall into the set of characters to strip, it will remove those as well, and you will be left with the string nther.\nIn a scenario like this, I would suggest to use the replace method, and replace the path/ substring with an empty string. You should also set the count argument to 1 to make sure only the first occurence is replaced, to safeguard from any other unintented consequences.\npanther = \u0026#34;path/panther.xml\u0026#34; panther.lstrip(\u0026#34;path/\u0026#34;) # Prints: nther.xml panther.replace(\u0026#34;path/\u0026#34;, \u0026#34;\u0026#34;, 1) # Prints: panther.xml vars() Method Return the __dict__ attribute of an Object. Useful for turning the attributes of an instance into a dictionary. Note, it disregards class attributes.\nResponse and Jsonify jsonify() returns a Response object, but already populate with the correct mimetype and etc.\nResponse(\u0026#34;{ \u0026#39;a\u0026#39;: \u0026#39;abc\u0026#39; }\u0026#34;, status=200, mimetype=\u0026#39;application/json\u0026#39;) jsonify() Usage What strip is really good at is removing leading and trailing whitespaces, when no arguments are given and removing sets of characters, but just be careful it does as you intend it to work.\nSo the lesson here is to always read the official documentation to know exactly how a given method works and don\u0026rsquo;t assume you know how a method works just from the name.\nAutomation https://automatetheboringstuff.com/chapter18/\nAnti Patterns https://docs.quantifiedcode.com/python-anti-patterns/\nVirtual Environment (venv) System Installation This is the installed version of Python on your computer. That is sourced from your /usr/local/bin directory.\nCheck where pip3 is sourced from and check which version are you running.\nwhich pip3 pip3 --version List installed packages on your system.\npip3 list Create virtual environment with the name of \u0026lt;venv_name\u0026gt; in your current directory.\npython3 -m venv \u0026lt;venv_name\u0026gt; Activate that virtual environment.\nsource \u0026lt;venv_name\u0026gt;/bin/activate Print on the screen a list of installed in a specific format for import and export.\npip freeze Create requirements.txt.\npip freeze \u0026gt; requirements.txt Deactivate virtual environment and delete it.\ndeactivate rm -rf \u0026lt;venv_name\u0026gt; Install packages into virtual environment from requirements.txt.\npip install -r requirements.txt "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/technology/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": "Docker Environments are not the same. For example you develop on a Macbook and server is Ubuntu server. Docker runs on containers. Docker file builds a docker image, which contains all project code,installments of needed programs, complete application wrapped in an image, which is designed to sit on top of a container.\nVideo Source\nSolid written tutorial\nTutorial Create file called Dockerfile\nTake a look at workspace/tutorial project.\n FROM will take from the Python image for DockerHub. COPY current directory RUN python specific stuff in requirements.txt CMD Commands to run, first the python command and then any python files  FROMpython:3-onbuildCOPY . /usr/src/appRUN pip install -r requirements.txtCMD [\u0026#34;python\u0026#34;, \u0026#34;api.py\u0026#34;]You can run services like:\ndocker run These usually has several arguments like port numbers, which can become tedious that is why it is better to use a docker-compose.yml file, like below. docker-compose is a yaml file and spins up all the containers we need.\nversion: \u0026#39;3\u0026#39; services: # you name the services product-service: # Directory where the dockerfile is build: ./product # sourcedirectory:/directoryonhost volumes: - ./product:/usr/src/app # localhostport:containerport ports: - 5001:80 website: # gets from dockerhub image: php:apache volumes: - ./website:/var/www/html ports: - 5000:80 depends_on: - product-service Run docker-compose file by running this command docker-compose up. You can stop the services with CTRL + C. The containers can be started up by using docker-compose up -d This will allow you to still navigate in the terminal and you can stop it by docker-compose stop.\nCommands  docker ps -a : List containers with name, ID, etc docker stop d31a3b925d89 : Stop container with ID docker system prune : Remove stopped containers and dangling images docker images : List images with repository, image ID, etc docker rmi e91727a11cd7 : Remove image with image ID docker build -t webserver-image:v1 . : Build image with name: web server-image version: v1 docker run -d -p 5000:80 webserver-image:v1 : Run image in container port 5000 locally and port 80 on container docker-compose up : Build image and run in container based on configuration in docker-compose.yaml file docker-compose up --build : To do a fresh build of images. Needed to update files. docker-compose up -d : Create containers and -d to launch in daemon mood (still navigate cmd) docker-compose stop : Stop all containers  Deploy Static website as container Medium article](https://medium.com/myriatek/using-docker-to-run-a-simple-nginx-server-75a48d74500b)\ndockerfile FROMnginx:alpineRUN mkdir /wwwCOPY dist/index.html /www/index.htmlCOPY dist/css /www/cssCOPY dist/js /www/jsCOPY dist/img /www/imgCOPY nginx.conf /etc/nginx/nginx.confThe first line defines our base image. The second line copies the content of the current directory into a particular location inside the container.\nnginx.conf events {} http { server { listen 80; root /www; index index.html; location / { include /etc/nginx/mime.types; try_files $uri $uri/ /index.html; } } } docker-compose.yaml version: \u0026#39;3.7\u0026#39; services: web-service: build: ./ ports: - 5000:80 "
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/js-frameworks/vue/",
	"title": "Vue",
	"tags": [],
	"description": "",
	"content": "Vue.js Front end javascript framework to build static and dynamic websites. Vue fundamentally changes how you think of web development.\nVue Instance The heart of the application.\nvar app = new Vue({ el: \u0026#34;#app\u0026#34;, data: { name: \u0026#39;Application\u0026#39; } }) Vue Expression Vue expressions can express all kinds of following JavaScript logic including string manipulation, tenirary operator, and built-in JavaScript functions.\n\u0026lt;h1\u0026gt;{{ product }}\u0026lt;/h1\u0026gt; {{ product + \u0026#39;!\u0026#39; }} {{ firstName + \u0026#39; \u0026#39; + lastName }} {{ clicked ? true : false }} {{ message.split(\u0026#39;\u0026#39;).reverse().join(\u0026#39;\u0026#39;) }} Best Practices\nLook at Scrimba videos as well.\nJavascript Refresher To turn on strict mode in Javascript add use strict to top of Javascript file, to omit a few warnings. Strict mode makes it easier to write \u0026ldquo;secure\u0026rdquo; JavaScript.\n\u0026#34;use strict\u0026#34; Objects are like structs in other programming languages.\nvar obj1 = { key1: \u0026#34;val1\u0026#34;, // or \u0026#34;key1\u0026#34; \tkey2: \u0026#34;val2\u0026#34; } console.log(obj1) console.log(obj1.key1) // console.log(obj1.key2) // console.log(obj1[\u0026#34;key1\u0026#34;]) // console.log(obj1[\u0026#34;key2\u0026#34;])  // Nesting objects var obj2 = { obj3: { key1: \u0026#34;val1\u0026#34;, key2: \u0026#34;val2\u0026#34; }, } // console.log(obj2) // console.log(obj2.obj3) // console.log(obj2.obj3.key1) // console.log(obj2.obj3.key2) // console.log(obj2.obj3[\u0026#34;key1\u0026#34;]) // console.log(obj2.obj3[\u0026#34;key2\u0026#34;])  Debug mode in Vue By addign keyword debug to HTML element tags, it triggers debug mode for that elements and all children elements.\n\u0026lt;body debug\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt; \u0026lt;!-- different ways to render data in DOM, most simplest: {{ }} --\u0026gt; \u0026lt;p\u0026gt;{{ message }}\u0026lt;/p\u0026gt; \u0026lt;!-- v-text tag renders message as plain text --\u0026gt; \u0026lt;p v-text=\u0026#34;message\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;!-- v-html tag renders message as HTML --\u0026gt; \u0026lt;p v-html=\u0026#34;message_2\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app = new Vue({ // el specifiy where in the DOM to render the app \tel: \u0026#34;#app\u0026#34;, data: { message: \u0026#34;hello world!\u0026#34;, message_2: \u0026#34;hello \u0026lt;br\u0026gt; world!\u0026#34; } }) \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; Separation of Concern Separate data from HTML.\nVirtualization the DOM. (Virtual DOM)\nTwo-binding. Bind the user input and HTML element. Using v-model tag\nProperty is a variable attached to an object. Method is a function attached to an object.\nTemplate Serves as an invisible wrapper.\n\u0026lt;template\u0026gt; \u0026lt;/template\u0026gt; Directive v-model Two-way binding\nTwo way data bindings on form input and elements. Keeps DOM and Vue app in sync.\nv-bind One-way binding\nShort version :\nAttribute binding, binds attribute with expression in virtual DOM.\n:alt=\u0026quot;description\u0026quot; :href=\u0026quot;url\u0026quot; :class=\u0026quot;isActive\u0026quot; v-show Just makes element display hidden, instead of not rendering it as with v-if and v-else\nMakes for better performance.\nv-show='true' Element is visible v-show='false' Element is hidden v-on Event Handling, such as click, hover mouse over, etc.\nShort version: @\n@mouseover @click @submit @keyup.enter Conditional Rendering \u0026lt;span v-if=\u0026quot;seen \u0026gt; 100\u0026quot;\u0026gt;ABC\u0026lt;/span\u0026gt; \u0026lt;span v-if-else=\u0026quot;seen \u0026lt; 10 \u0026amp;\u0026amp; seen \u0026gt; 5\u0026quot;\u0026gt;DEF\u0026lt;/span\u0026gt; \u0026lt;span v-else\u0026gt;EFG\u0026lt;/span\u0026gt; List Rendering \u0026lt;div v-for=\u0026quot;element in list\u0026quot; :key=\u0026quot;element.id\u0026quot;\u0026gt;{{ element.name }}\u0026lt;/div\u0026gt; Communicating Events Emit data from child components to parent component.\nStyling with Vue Components Most powerful feature a Vue. Makes code more reusable and markup more readable. Make a block of code a smaller block of code.\nBest practice: HTML elements without hypens, Vue components name with hyphens.\nComponent Lifecycle\n/* created(): since the processing of the options is finished you have access to reactive data properties and change them if you want. At this stage DOM has not been mounted or added yet. So you cannot do any DOM manipulation here. Typically used for data fetching */ created() { }, /* mounted(): called after the DOM has been mounted or rendered. Here you have access to the DOM elements and DOM manipulation can be performed for example get the innerHTML: */ mounted() { }, Components are like HTML functions. When a component is created, you essentially make a custom HTML tag. The props field represents property, which you set inside the component\u0026rsquo;s HTML tag. The : in :name indicates that it is a Vue attribute. So the value you give to :name is looked for in th Vue apps data field.\n\u0026lt;animal :name=\u0026#34;dog\u0026#34;\u0026gt;\u0026lt;/animal\u0026gt; \u0026lt;script\u0026gt; Vue.component(\u0026#34;animal\u0026#34;, { props: [\u0026#34;name\u0026#34;], template: \u0026#39;\u0026lt;p v-html=\u0026#34;name\u0026#34;\u0026gt;\u0026lt;/p\u0026gt;\u0026#39; }) var app = new Vue({ el: \u0026#34;#app\u0026#34;, data: { dog: \u0026#34;Doggy!\u0026#34;, cat: \u0026#34;Kitty!!\u0026#34;, bird: \u0026#34;Birdy!!!\u0026#34; } }) \u0026lt;/script\u0026gt; @click triggers when clicked on, :class chooses which class is this element belongs to, used for styling.\n\u0026lt;div id=\u0026#34;app\u0026#34; :style=\u0026#34;{ background: background() }\u0026#34;\u0026gt; \u0026lt;p v-html=\u0026#34;actice\u0026#34; @click=\u0026#34;animagus\u0026#34; :class=\u0026#34;breathe()\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; Control-Flow The way we control the flow of the program through conditional statements and loops.\nLessons Prevent on click on parent when clicking button inside div Event modifier, @click.stop is placed on child element, in order for parent element click not to fire.\n\u0026lt;li v-for=\u0026#34;tab in tabs\u0026#34; class=\u0026#34;nav-item\u0026#34; :id=\u0026#34;tab.name\u0026#34; @click=\u0026#34;currentTab = tab.name\u0026#34;\u0026gt; {{ tab.name }} \u0026lt;ul v-if=\u0026#34;tab.subtabs != null\u0026#34; class=\u0026#34;sub-menu\u0026#34;\u0026gt; \u0026lt;ul v-for=\u0026#34;subtab in tab.subtabs\u0026#34; class=\u0026#34;submenu-item\u0026#34; :id=\u0026#34;subtab.name\u0026#34; @click.stop=\u0026#34;currentTab = subtab.name\u0026#34;\u0026gt; {{ subtab.name }} \u0026lt;/ul\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; Timeout in Vue js component Add a bind() call to your function declaration:\nsetTimeout(function () { this.fetchHole() }.bind(this), 1000) So that your Vue component\u0026rsquo;s this is accessible within the function.\nEnvironmental Variables https://cli.vuejs.org/guide/mode-and-env.html\nhttps://medium.com/js-dojo/how-to-use-environment-variables-in-vue-js-273eba0102b0\nMake sure you name the environmental variables starting with VUE_APP_ in order for it to work.\n"
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://gaborkevinbarta.com/developers-journal/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]